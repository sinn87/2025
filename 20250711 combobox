Imports System.Drawing
Imports System.Drawing.Drawing2D
Imports System.Windows.Forms

Public Class RoundComboBox
    Inherits ComboBox

    ' 圆角半径（固定值，可改成变量）
    Private borderRadius As Integer = 6

    ' 控制只绘制一次
    Private hasDrawn As Boolean = False

    Public Sub New()
        Me.DrawMode = DrawMode.OwnerDrawFixed
        Me.DropDownStyle = ComboBoxStyle.DropDownList
        Me.FlatStyle = FlatStyle.Flat
        Me.SetStyle(ControlStyles.UserPaint, False)
    End Sub

    ' 替代 WndProc，仅在控件首次显示后绘制一次边框
    Protected Overrides Sub OnHandleCreated(e As EventArgs)
        MyBase.OnHandleCreated(e)

        If Not hasDrawn Then
            Me.BeginInvoke(Sub()
                               Using g As Graphics = Me.CreateGraphics()
                                   DrawRoundBorder(g)
                               End Using
                               hasDrawn = True
                           End Sub)
        End If
    End Sub

    ' 绘制下拉项文字（不影响圆角边框）
    Protected Overrides Sub OnDrawItem(e As DrawItemEventArgs)
        MyBase.OnDrawItem(e)

        If e.Index < 0 OrElse e.Index >= Me.Items.Count Then Return

        e.DrawBackground()

        Dim text As String = ""
        If TypeOf Me.Items(e.Index) Is DataRowView AndAlso Me.DisplayMember <> "" Then
            text = CType(Me.Items(e.Index), DataRowView)(Me.DisplayMember).ToString()
        Else
            text = Me.Items(e.Index).ToString()
        End If

        Dim foreBrush As Brush = If((e.State And DrawItemState.Selected) = DrawItemState.Selected,
                                    Brushes.White, Brushes.Black)
        Dim bgBrush As Brush = If((e.State And DrawItemState.Selected) = DrawItemState.Selected,
                                  New SolidBrush(SystemColors.Highlight), New SolidBrush(Color.White))

        e.Graphics.FillRectangle(bgBrush, e.Bounds)
        e.Graphics.DrawString(text, e.Font, foreBrush, e.Bounds.Left + 2, e.Bounds.Top + 2)
        e.DrawFocusRectangle()
    End Sub

    ' 绘制圆角边框
    Private Sub DrawRoundBorder(g As Graphics)
        Dim rect As New Rectangle(0, 0, Me.Width - 1, Me.Height - 1)
        Dim path As GraphicsPath = GetRoundedRectPath(rect, borderRadius)
        g.SmoothingMode = SmoothingMode.AntiAlias
        Using pen As New Pen(Color.LightBlue, 1)
            g.DrawPath(pen, path)
        End Using
    End Sub

    ' 生成圆角路径
    Private Function GetRoundedRectPath(rect As Rectangle, radius As Integer) As GraphicsPath
        Dim path As New GraphicsPath()
        path.AddArc(rect.X, rect.Y, radius, radius, 180, 90)
        path.AddArc(rect.Right - radius, rect.Y, radius, radius, 270, 90)
        path.AddArc(rect.Right - radius, rect.Bottom - radius, radius, radius, 0, 90)
        path.AddArc(rect.X, rect.Bottom - radius, radius, radius, 90, 90)
        path.CloseFigure()
        Return path
    End Function
End Class
