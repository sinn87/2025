Public Class RoundedLabel
    Inherits Label

    Private _cornerRadius As Integer = 10
    Private _backShapeColor As Color = Color.White

    Public Property CornerRadius As Integer
        Get
            Return _cornerRadius
        End Get
        Set(value As Integer)
            _cornerRadius = value
            Me.Invalidate()
        End Set
    End Property

    Public Property BackgroundShapeColor As Color
        Get
            Return _backShapeColor
        End Get
        Set(value As Color)
            _backShapeColor = value
            Me.Invalidate()
        End Set
    End Property

    Public Sub New()
        Me.AutoSize = False
        Me.TextAlign = ContentAlignment.MiddleCenter
        Me.BackColor = Color.Transparent
        Me.ForeColor = Color.Black
        Me.DoubleBuffered = True
    End Sub

    Protected Overrides Sub OnPaint(e As PaintEventArgs)
        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.AntiAlias

        Dim rect As RectangleF = New RectangleF(0.5F, 0.5F, Me.Width - 1.0F, Me.Height - 1.0F)
        Dim radius As Single = Math.Min(_cornerRadius, Math.Min(Me.Width / 2, Me.Height / 2))

        Using path As Drawing2D.GraphicsPath = GetRoundedRect(rect, radius)
            Using brush As New SolidBrush(_backShapeColor)
                e.Graphics.FillPath(brush, path)
            End Using
        End Using

        ' 绘制文字
        MyBase.OnPaint(e)
    End Sub

    Private Function GetRoundedRect(rect As RectangleF, radius As Single) As Drawing2D.GraphicsPath
        Dim path As New Drawing2D.GraphicsPath()
        Dim diameter As Single = radius * 2

        path.AddArc(rect.X, rect.Y, diameter, diameter, 180, 90) ' 左上
        path.AddArc(rect.Right - diameter, rect.Y, diameter, diameter, 270, 90) ' 右上
        path.AddArc(rect.Right - diameter, rect.Bottom - diameter, diameter, diameter, 0, 90) ' 右下
        path.AddArc(rect.X, rect.Bottom - diameter, diameter, diameter, 90, 90) ' 左下
        path.CloseFigure()

        Return path
    End Function
End Class








Private Function GetRoundedRect(rect As Rectangle, radius As Integer) As Drawing2D.GraphicsPath
    radius = Math.Min(radius, Math.Min(rect.Width \ 2, rect.Height \ 2))
    Dim path As New Drawing2D.GraphicsPath()
    path.AddArc(rect.X, rect.Y, radius * 2, radius * 2, 180, 90) ' 左上
    path.AddArc(rect.Right - radius * 2, rect.Y, radius * 2, radius * 2, 270, 90) ' 右上
    path.AddArc(rect.Right - radius * 2, rect.Bottom - radius * 2, radius * 2, radius * 2, 0, 90) ' 右下
    path.AddArc(rect.X, rect.Bottom - radius * 2, radius * 2, radius * 2, 90, 90) ' 左下
    path.CloseFigure()
    Return path
End Function




Public Class RoundedLabel
    Inherits UserControl

    Private _text As String = "Label"
    Private _textColor As Color = Color.Black
    Private _backColorShape As Color = Color.White
    Private _cornerRadius As Integer = 10

    Public Sub New()
        Me.DoubleBuffered = True
        Me.Size = New Size(150, 40)
    End Sub

    Public Property LabelText As String
        Get
            Return _text
        End Get
        Set(value As String)
            _text = value
            Me.Invalidate()
        End Set
    End Property

    Public Property TextColor As Color
        Get
            Return _textColor
        End Get
        Set(value As Color)
            _textColor = value
            Me.Invalidate()
        End Set
    End Property

    Public Property BackgroundShapeColor As Color
        Get
            Return _backColorShape
        End Get
        Set(value As Color)
            _backColorShape = value
            Me.Invalidate()
        End Set
    End Property

    Public Property CornerRadius As Integer
        Get
            Return _cornerRadius
        End Get
        Set(value As Integer)
            _cornerRadius = value
            Me.Invalidate()
        End Set
    End Property

    Protected Overrides Sub OnPaint(e As PaintEventArgs)
        MyBase.OnPaint(e)
        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.AntiAlias

        ' 绘制白色圆角背景
        Using brush As New SolidBrush(_backColorShape)
            e.Graphics.FillPath(brush, GetRoundedRect(New Rectangle(0, 0, Me.Width, Me.Height), _cornerRadius))
        End Using

        ' 绘制文字
        Using brush As New SolidBrush(_textColor)
            Dim sf As New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center}
            e.Graphics.DrawString(_text, Me.Font, brush, Me.ClientRectangle, sf)
        End Using
    End Sub

    Private Function GetRoundedRect(rect As Rectangle, radius As Integer) As Drawing2D.GraphicsPath
        Dim path As New Drawing2D.GraphicsPath()
        path.AddArc(rect.X, rect.Y, radius, radius, 180, 90)
        path.AddArc(rect.Right - radius, rect.Y, radius, radius, 270, 90)
        path.AddArc(rect.Right - radius, rect.Bottom - radius, radius, radius, 0, 90)
        path.AddArc(rect.X, rect.Bottom - radius, radius, radius, 90, 90)
        path.CloseFigure()
        Return path
    End Function
End Class
