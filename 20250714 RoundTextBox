Protected Overrides Sub OnPaint(e As PaintEventArgs)
    MyBase.OnPaint(e)
    Dim radius As Integer = 15
    Dim rect As New Rectangle(0, 0, Me.Width - 1, Me.Height - 1)

    ' 构建圆角路径
    Dim path As New Drawing2D.GraphicsPath()
    path.AddArc(rect.X, rect.Y, radius, radius, 180, 90)
    path.AddArc(rect.Right - radius, rect.Y, radius, radius, 270, 90)
    path.AddArc(rect.Right - radius, rect.Bottom - radius, radius, radius, 0, 90)
    path.AddArc(rect.X, rect.Bottom - radius, radius, radius, 90, 90)
    path.CloseFigure()

    ' 设置控件真正的圆角形状
    Me.Region = New Region(path)

    ' 开启抗锯齿
    e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.AntiAlias

    ' 边框绘制
    Using pen As New Pen(Color.Gray, 1.2F)  ' 可调小一点减轻模糊感
        e.Graphics.DrawPath(pen, path)
    End Using
End Sub





Imports System.Drawing
Imports System.Drawing.Drawing2D
Imports System.Windows.Forms

Public Class RoundTextBox
    Inherits UserControl

    Private WithEvents innerTextBox As New TextBox()

    Public Sub New()
        Me.DoubleBuffered = True
        Me.Size = New Size(150, 30)
        Me.BackColor = Color.White

        ' 设置内嵌 TextBox 属性
        innerTextBox.BorderStyle = BorderStyle.None
        innerTextBox.Location = New Point(10, 7)
        innerTextBox.Width = Me.Width - 20
        innerTextBox.Anchor = AnchorStyles.Top Or AnchorStyles.Left Or AnchorStyles.Right
        innerTextBox.Font = New Font("Segoe UI", 10)
        innerTextBox.BackColor = Me.BackColor

        Me.Controls.Add(innerTextBox)
    End Sub

    ' 公开 Text 属性（用于外部访问）
    Public Overrides Property Text As String
        Get
            Return innerTextBox.Text
        End Get
        Set(value As String)
            innerTextBox.Text = value
        End Set
    End Property

    ' 绘制圆角边框
    Protected Overrides Sub OnPaint(e As PaintEventArgs)
        MyBase.OnPaint(e)
        Dim radius As Integer = 15
        Dim rect As New Rectangle(0, 0, Me.Width - 1, Me.Height - 1)

        Dim path As New GraphicsPath()
        path.AddArc(rect.X, rect.Y, radius, radius, 180, 90)
        path.AddArc(rect.Right - radius, rect.Y, radius, radius, 270, 90)
        path.AddArc(rect.Right - radius, rect.Bottom - radius, radius, radius, 0, 90)
        path.AddArc(rect.X, rect.Bottom - radius, radius, radius, 90, 90)
        path.CloseFigure()

        e.Graphics.SmoothingMode = SmoothingMode.AntiAlias
        Using pen As New Pen(Color.Gray, 1.5F)
            e.Graphics.DrawPath(pen, path)
        End Using
    End Sub

    ' 自动调整内嵌 TextBox 大小
    Protected Overrides Sub OnResize(e As EventArgs)
        MyBase.OnResize(e)
        innerTextBox.Width = Me.Width - 20
        innerTextBox.Height = Me.Height - 10
    End Sub
End Class
