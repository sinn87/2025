Public Class RoundedButton
    Inherits Button

    Private _cornerRadius As Integer = 10
    Private _borderColor As Color = Color.Red
    Private _borderSize As Integer = 2
    Private _buttonBackColor As Color = Color.White

    Public Property CornerRadius As Integer
        Get
            Return _cornerRadius
        End Get
        Set(value As Integer)
            _cornerRadius = value
            Me.Invalidate()
        End Set
    End Property

    Public Property BorderColor As Color
        Get
            Return _borderColor
        End Get
        Set(value As Color)
            _borderColor = value
            Me.Invalidate()
        End Set
    End Property

    Public Property BorderSize As Integer
        Get
            Return _borderSize
        End Get
        Set(value As Integer)
            _borderSize = value
            Me.Invalidate()
        End Set
    End Property

    Public Property ButtonBackColor As Color
        Get
            Return _buttonBackColor
        End Get
        Set(value As Color)
            _buttonBackColor = value
            Me.Invalidate()
        End Set
    End Property

    Public Sub New()
        Me.FlatStyle = FlatStyle.Flat
        Me.FlatAppearance.BorderSize = 0 ' 不用系统边框
        Me.BackColor = Color.Transparent
        Me.DoubleBuffered = True
    End Sub

    Protected Overrides Sub OnPaint(e As PaintEventArgs)
        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.AntiAlias

        Dim rect As RectangleF = New RectangleF(0.5F, 0.5F, Me.Width - 1.0F, Me.Height - 1.0F)
        Dim radius As Single = Math.Min(_cornerRadius, Math.Min(Me.Width / 2, Me.Height / 2))

        ' 圆角路径
        Using path As Drawing2D.GraphicsPath = GetRoundedRect(rect, radius)
            ' 填充背景
            Using brush As New SolidBrush(_buttonBackColor)
                e.Graphics.FillPath(brush, path)
            End Using

            ' 绘制边框
            If _borderSize > 0 Then
                Using pen As New Pen(_borderColor, _borderSize)
                    e.Graphics.DrawPath(pen, path)
                End Using
            End If
        End Using

        ' 绘制文字
        Dim sf As New StringFormat() With {
            .Alignment = StringAlignment.Center,
            .LineAlignment = StringAlignment.Center
        }
        Using textBrush As New SolidBrush(Me.ForeColor)
            e.Graphics.DrawString(Me.Text, Me.Font, textBrush, Me.ClientRectangle, sf)
        End Using
    End Sub

    Private Function GetRoundedRect(rect As RectangleF, radius As Single) As Drawing2D.GraphicsPath
        Dim path As New Drawing2D.GraphicsPath()
        Dim diameter As Single = radius * 2
        path.AddArc(rect.X, rect.Y, diameter, diameter, 180, 90)
        path.AddArc(rect.Right - diameter, rect.Y, diameter, diameter, 270, 90)
        path.AddArc(rect.Right - diameter, rect.Bottom - diameter, diameter, diameter, 0, 90)
        path.AddArc(rect.X, rect.Bottom - diameter, diameter, diameter, 90, 90)
        path.CloseFigure()
        Return path
    End Function
End Class
