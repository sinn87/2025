
Public Sub SavePage(mode As EntryMode, tabControls As List(Of Control), Optional originalDict As Dictionary(Of String, DetailItem) = Nothing)
    Dim formDict As New Dictionary(Of String, DetailItem)

    ' 1. 遍历控件 → 提取值
    For Each ctrl In tabControls
        Dim bid As String = TryCast(ctrl.Tag, String)
        If String.IsNullOrEmpty(bid) Then Continue For

        Dim value As String = GetControlValue(ctrl)

        If mode = EntryMode.CreateNew Then
            ' 所有控件都插入
            formDict(bid) = New DetailItem With {
                .BID = bid,
                .Value = value,
                .Status = "新建"
            }

        ElseIf mode = EntryMode.Edit Then
            ' 仅更新变更控件
            If Not originalDict.ContainsKey(bid) OrElse originalDict(bid).Value <> value Then
                formDict(bid) = New DetailItem With {
                    .BID = bid,
                    .Value = value,
                    .Status = "更新"
                }
            End If
        End If
    Next

    ' 2. 保存数据库（根据 mode）
    SaveToDatabase(mode, formDict)
End Sub

Private Function GetControlValue(ctrl As Control) As String
    If TypeOf ctrl Is TextBox Then
        Return DirectCast(ctrl, TextBox).Text
    ElseIf TypeOf ctrl Is ComboBox Then
        Return DirectCast(ctrl, ComboBox).SelectedItem?.ToString()
    ElseIf TypeOf ctrl Is CheckBox Then
        Return If(DirectCast(ctrl, CheckBox).Checked, "1", "0")
    ElseIf TypeOf ctrl Is DateTimePicker Then
        Return DirectCast(ctrl, DateTimePicker).Value.ToString("yyyy-MM-dd")
    End If
    Return ""
End Function



Private Sub SaveToDatabase(mode As EntryMode, dict As Dictionary(Of String, DetailItem))
    Using conn As New OleDbConnection("Provider=Microsoft.ACE.OLEDB.12.0;Data Source=yourdb.accdb")
        conn.Open()
        Dim trans = conn.BeginTransaction()

        Try
            Dim aid As Integer

            If mode = EntryMode.CreateNew Then
                ' 新建AID
                Dim cmd = New OleDbCommand("INSERT INTO 表A (创建日) VALUES (?)", conn, trans)
                cmd.Parameters.AddWithValue("?", Now)
                cmd.ExecuteNonQuery()

                ' 取得新ID
                cmd = New OleDbCommand("SELECT @@IDENTITY", conn, trans)
                aid = Convert.ToInt32(cmd.ExecuteScalar())
            Else
                ' 假设 aid 由上层传进来（更新模式）
                aid = CurrentEditAid ' ← 这个变量你可自定义保存
            End If

            ' 插入/更新明细（表B）
            For Each item In dict.Values
                If item.Status = "新建" Then
                    Dim cmd = New OleDbCommand("INSERT INTO 表B (AID, BID, Value, Status) VALUES (?, ?, ?, ?)", conn, trans)
                    cmd.Parameters.AddWithValue("?", aid)
                    cmd.Parameters.AddWithValue("?", item.BID)
                    cmd.Parameters.AddWithValue("?", item.Value)
                    cmd.Parameters.AddWithValue("?", item.Status)
                    cmd.ExecuteNonQuery()
                ElseIf item.Status = "更新" Then
                    ' 更新或插入（根据有无）
                    Dim cmd = New OleDbCommand("
                        UPDATE 表B SET Value = ?, Status = ?
                        WHERE AID = ? AND BID = ?", conn, trans)
                    cmd.Parameters.AddWithValue("?", item.Value)
                    cmd.Parameters.AddWithValue("?", item.Status)
                    cmd.Parameters.AddWithValue("?", aid)
                    cmd.Parameters.AddWithValue("?", item.BID)

                    Dim affected = cmd.ExecuteNonQuery()
                    If affected = 0 Then
                        ' 不存在则插入
                        cmd = New OleDbCommand("INSERT INTO 表B (AID, BID, Value, Status) VALUES (?, ?, ?, ?)", conn, trans)
                        cmd.Parameters.AddWithValue("?", aid)
                        cmd.Parameters.AddWithValue("?", item.BID)
                        cmd.Parameters.AddWithValue("?", item.Value)
                        cmd.Parameters.AddWithValue("?", item.Status)
                        cmd.ExecuteNonQuery()
                    End If
                End If
            Next

            ' 插入状态（表C）
            Dim statusCmd = New OleDbCommand("INSERT INTO 表C (AID, PageCode, Status, Date) VALUES (?, ?, ?, ?)", conn, trans)
            statusCmd.Parameters.AddWithValue("?", aid)
            statusCmd.Parameters.AddWithValue("?", "页面代码")
            statusCmd.Parameters.AddWithValue("?", If(mode = EntryMode.CreateNew, "新建", "更新"))
            statusCmd.Parameters.AddWithValue("?", Now)
            statusCmd.ExecuteNonQuery()

            trans.Commit()
            MessageBox.Show("保存成功")
        Catch ex As Exception
            trans.Rollback()
            MessageBox.Show("保存失败：" & ex.Message)
        End Try
    End Using
End Sub
























Imports System.Data.OleDb

Public Sub SaveFlow(mode As EntryMode, formData As Dictionary(Of String, Object), detailItems As List(Of DetailItem), status As String)
    Dim connStr As String = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=your.accdb;"
    Using conn As New OleDbConnection(connStr)
        conn.Open()
        Dim trans = conn.BeginTransaction()

        Try
            Dim aid As String

            If mode = EntryMode.CreateNew Then
                aid = GenerateNewAID()
                InsertMainTable(conn, trans, aid, formData)
            Else
                aid = formData("AID").ToString()
            End If

            For Each item In detailItems
                Dim statusLabel As String = ""
                Select Case mode
                    Case EntryMode.CreateNew
                        InsertDetail(conn, trans, aid, item, "新建")
                    Case EntryMode.Edit
                        InsertDetail(conn, trans, aid, item, "更新")
                    Case EntryMode.ViewOnly
                        UpdateStatusOnly(conn, trans, aid, item.BID, "审查完成")
                End Select

                InsertDetail(conn, trans, aid, item, statusLabel)
            Next

            InsertStatus(conn, trans, aid, status)

            trans.Commit()
            MessageBox.Show("保存成功")
        Catch ex As Exception
            trans.Rollback()
            MessageBox.Show("保存失败：" & ex.Message)
        End Try
    End Using
End Sub


Private Sub InsertMainTable(conn As OleDbConnection, trans As OleDbTransaction, aid As String, formData As Dictionary(Of String, Object))
    Dim sql = "INSERT INTO MainTable (AID, Name, Date) VALUES (?, ?, ?)"
    Using cmd As New OleDbCommand(sql, conn, trans)
        cmd.Parameters.AddWithValue("?", aid)
        cmd.Parameters.AddWithValue("?", formData("Name"))
        cmd.Parameters.AddWithValue("?", DateTime.Now)
        cmd.ExecuteNonQuery()
    End Using
End Sub


Private Sub InsertDetail(conn As OleDbConnection, trans As OleDbTransaction, aid As String, item As DetailItem, status As String)
    Dim sql = "INSERT INTO DetailTable (AID, BID, Value, Status) VALUES (?, ?, ?, ?)"
    Using cmd As New OleDbCommand(sql, conn, trans)
        cmd.Parameters.AddWithValue("?", aid)
        cmd.Parameters.AddWithValue("?", item.BID)
        cmd.Parameters.AddWithValue("?", item.Value)
        cmd.Parameters.AddWithValue("?", status)
        cmd.ExecuteNonQuery()
    End Using
End Sub

Private Sub InsertOrUpdateDetail(conn As OleDbConnection, trans As OleDbTransaction, aid As String, item As DetailItem, status As String)
    Dim sqlCheck = "SELECT COUNT(*) FROM DetailTable WHERE AID = ? AND BID = ?"
    Using checkCmd As New OleDbCommand(sqlCheck, conn, trans)
        checkCmd.Parameters.AddWithValue("?", aid)
        checkCmd.Parameters.AddWithValue("?", item.BID)
        Dim exists = Convert.ToInt32(checkCmd.ExecuteScalar()) > 0

        If exists Then
            Dim sqlUpdate = "UPDATE DetailTable SET Value = ?, Status = ? WHERE AID = ? AND BID = ?"
            Using updateCmd As New OleDbCommand(sqlUpdate, conn, trans)
                updateCmd.Parameters.AddWithValue("?", item.Value)
                updateCmd.Parameters.AddWithValue("?", status)
                updateCmd.Parameters.AddWithValue("?", aid)
                updateCmd.Parameters.AddWithValue("?", item.BID)
                updateCmd.ExecuteNonQuery()
            End Using
        Else
            InsertDetail(conn, trans, aid, item, status)
        End If
    End Using
End Sub

Private Sub UpdateStatusOnly(conn As OleDbConnection, trans As OleDbTransaction, aid As String, bid As String, status As String)
    Dim sql = "UPDATE DetailTable SET Status = ? WHERE AID = ? AND BID = ?"
    Using cmd As New OleDbCommand(sql, conn, trans)
        cmd.Parameters.AddWithValue("?", status)
        cmd.Parameters.AddWithValue("?", aid)
        cmd.Parameters.AddWithValue("?", bid)
        cmd.ExecuteNonQuery()
    End Using
End Sub


Private Sub InsertStatus(conn As OleDbConnection, trans As OleDbTransaction, aid As String, status As String)
    Dim sql = "INSERT INTO StatusTable (AID, Status, UpdateTime) VALUES (?, ?, ?)"
    Using cmd As New OleDbCommand(sql, conn, trans)
        cmd.Parameters.AddWithValue("?", aid)
        cmd.Parameters.AddWithValue("?", status)
        cmd.Parameters.AddWithValue("?", DateTime.Now)
        cmd.ExecuteNonQuery()
    End Using
End Sub



Public Class DetailItem
    Public Property BID As String     ' 项目编号，比如 "NAME01"
    Public Property Value As String   ' 控件的当前值，比如 "张三"
End Class

Public Function ExtractDetailItemsFromControls(parent As Control) As List(Of DetailItem)
    Dim list As New List(Of DetailItem)

    For Each ctrl In parent.Controls
        Dim bid As String = TryCast(ctrl.Tag, String)
        If String.IsNullOrEmpty(bid) Then Continue For

        Dim value As String = ""

        If TypeOf ctrl Is TextBox Then
            value = DirectCast(ctrl, TextBox).Text
        ElseIf TypeOf ctrl Is ComboBox Then
            value = DirectCast(ctrl, ComboBox).Text
        ElseIf TypeOf ctrl Is CheckBox Then
            value = If(DirectCast(ctrl, CheckBox).Checked, "1", "0")
        ElseIf TypeOf ctrl Is DateTimePicker Then
            value = DirectCast(ctrl, DateTimePicker).Value.ToString("yyyy-MM-dd")
        End If

        list.Add(New DetailItem With {.BID = bid, .Value = value})
    Next

    Return list
End Function
