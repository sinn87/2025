Imports System.Data.OleDb

Public Module DataAccessHelper
    Private ReadOnly connStr As String = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=yourdb.accdb"

    ' 读取数据（只读未逻辑删除的记录）
    Public Function LoadDataByOfferingID(tableName As String, offeringID As String) As DataTable
        Dim conn As New OleDbConnection(connStr)
        Dim dt As New DataTable()
        Dim sql As String = $"SELECT * FROM {tableName} WHERE OfferingID = @OfferingID AND 状态 <> '已删除'"
        Dim adapter As New OleDbDataAdapter(sql, conn)
        adapter.SelectCommand.Parameters.AddWithValue("@OfferingID", offeringID)
        adapter.Fill(dt)
        Return dt
    End Function

    ' 保存更改（插入新记录或逻辑删除）
    Public Sub SaveChanges(tableName As String, dt As DataTable, offeringID As String)
        Using conn As New OleDbConnection(connStr)
            conn.Open()
            Dim trans = conn.BeginTransaction()

            Try
                For Each row As DataRow In dt.Rows
                    Select Case row.RowState
                        Case DataRowState.Modified
                            ' 插入一条新的记录
                            Dim insertCmd = conn.CreateCommand()
                            insertCmd.Transaction = trans

                            ' 构造 INSERT（注意：字段应根据实际情况改写）
                            insertCmd.CommandText = $"INSERT INTO {tableName} (OfferingID, 更新日期, ID, 内容, 状态) VALUES (@offeringID, @date, @id, @content, '编辑')"
                            insertCmd.Parameters.AddWithValue("@offeringID", offeringID)
                            insertCmd.Parameters.AddWithValue("@date", DateTime.Now)
                            insertCmd.Parameters.AddWithValue("@id", row("ID"))
                            insertCmd.Parameters.AddWithValue("@content", row("内容"))
                            insertCmd.ExecuteNonQuery()

                        Case DataRowState.Deleted
                            ' 逻辑删除（更新原行状态为“已删除”）
                            Dim originalID = row("ID", DataRowVersion.Original)
                            Dim originalDate = row("更新日期", DataRowVersion.Original)

                            Dim delCmd = conn.CreateCommand()
                            delCmd.Transaction = trans
                            delCmd.CommandText = $"UPDATE {tableName} SET 状态 = '已删除' WHERE OfferingID = @offeringID AND 更新日期 = @date AND ID = @id"
                            delCmd.Parameters.AddWithValue("@offeringID", offeringID)
                            delCmd.Parameters.AddWithValue("@date", originalDate)
                            delCmd.Parameters.AddWithValue("@id", originalID)
                            delCmd.ExecuteNonQuery()
                    End Select
                Next

                trans.Commit()
            Catch ex As Exception
                trans.Rollback()
                Throw
            End Try
        End Using
    End Sub
End Module








Private originalTable As DataTable

Private Sub dgv_CellValueChanged(sender As Object, e As DataGridViewCellEventArgs) Handles Me.CellValueChanged
    If originalTable Is Nothing Then Return

    Dim colName As String = Me.Columns(e.ColumnIndex).Name
    Dim rowIndex As Integer = e.RowIndex

    ' 获取当前值与原始值
    Dim currentValue = Me.Rows(rowIndex).Cells(colName).Value?.ToString()
    Dim originalValue = originalTable.Rows(rowIndex)(colName)?.ToString()

    ' 判断是否不同，标黄
    If currentValue <> originalValue Then
        Me.Rows(rowIndex).Cells(colName).Style.BackColor = Color.Yellow
    Else
        Me.Rows(rowIndex).Cells(colName).Style.BackColor = Color.White
    End If
End Sub





Imports System.Data.OleDb

Public Class Form1

    ' 连接字符串（需要根据你的数据库路径修改）
    Dim connectionString As String = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\path\to\your\database.accdb"

    ' 加载数据的方法
    Public Sub LoadDataFromAccess()
        ' 创建一个 DataTable 来存储数据库中的数据
        Dim dt As New DataTable()

        ' 创建数据库连接对象
        Using connection As New OleDbConnection(connectionString)
            ' 打开连接
            connection.Open()

            ' SQL 查询语句（假设我们要查询 Customers 表中的所有数据）
            Dim sql As String = "SELECT * FROM Customers"

            ' 创建数据适配器
            Using adapter As New OleDbDataAdapter(sql, connection)
                ' 使用数据适配器填充 DataTable
                adapter.Fill(dt)
            End Using
        End Using

        ' 将 DataTable 数据绑定到 DataGridView
        dgv.DataSource = dt
    End Sub

    ' 表单加载时自动调用 LoadDataFromAccess 方法
    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        ' 调用 LoadDataFromAccess 方法加载数据
        LoadDataFromAccess()
    End Sub

End Class
